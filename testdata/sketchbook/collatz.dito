

# collatz : Given n return its next
# number in a collatz sequence...
collatz := func(n) -> (
    n           if n <= 1 else
    n / 2       if n % 2 == 0 else
    3 * n + 1)

collatz_seq := func(n) <- (
    collatz(n) if n > 1 else break)

# Generalised iterator.
iterseq := func(n, nextfn, stopfn) <- (
    nextfn(n) if not stopfn(n) else break)

map := func(fn, array) -> (fn(n) for n in array)
print(map(double, [1, 2, 3, 4, 5]))


for n in collatz_seq(25) {
    print(n)
}

cats = cats[-1]